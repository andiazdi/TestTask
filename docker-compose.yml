services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: test_task
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: bot_admin/Dockerfile.django
    command: >
      sh -c "python manage.py migrate &&
             gunicorn bot_admin.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile.bot
    volumes:
      - .:/app
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
volumes:
  pgdata:
